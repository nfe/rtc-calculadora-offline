name: Build and Publish

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    # Job-level permissions configuration starts here
    permissions:                
      contents: write           # 'write' access to repository contents

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download application
        run: curl -L -o calculadora.zip https://s3.i02.estaleiro.serpro.gov.br/rtccalc-repo-apr/calculadora.zip

      - name: Unzip application and check for new version
        id: check_version
        run: |
          unzip calculadora.zip
          NEW_HASH=$(md5sum codigo-fonte-backend.zip | awk '{print $1}')
          OLD_HASH=""
          if [ -f codigo-fonte-backend.md5 ]; then
            OLD_HASH=$(cat codigo-fonte-backend.md5)
          fi
          if [ "$NEW_HASH" != "$OLD_HASH" ]; then
            echo "New version found. Updating files."
            echo "is_new_version=true" >> $GITHUB_ENV
            echo $NEW_HASH > codigo-fonte-backend.md5
          else
            echo "No new version found."
            echo "is_new_version=false" >> $GITHUB_ENV
          fi

      - name: Unzip and commit if new version
        if: env.is_new_version == 'true'
        run: |
          if [ ! -d "codigo-fonte-backend" ]; then mkdir codigo-fonte-backend; fi
          unzip -o codigo-fonte-backend.zip -d codigo-fonte-backend
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add codigo-fonte-backend codigo-fonte-backend.md5
          git commit -m "Update backend source code - $(date +'%Y-%m-%d')"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set tag
        run: | 
          new_tag="v$(date +'%Y-%m-%d')"
          echo "::set-output name=new_tag::$new_tag"
          echo "NEW_TAG=$new_tag" >> $GITHUB_ENV
  
      - name: Set environment variable
        run: echo "NEW_TAG=${{ steps.set-tag.outputs.new_tag }}" >> $GITHUB_ENV

      - name: Display new tag
        run: echo "New tag is $NEW_TAG"

      - name: Create Release
        id: create_release
        if: env.is_new_version == 'true'
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.set-tag.outputs.new_tag }}
          release_name: ${{ steps.set-tag.outputs.new_tag }}
          body: New version of the backend source code.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        if: env.is_new_version == 'true'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./codigo-fonte-backend.zip
          asset_name: codigo-fonte-backend.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
