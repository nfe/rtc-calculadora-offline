-------------------------------------------------------------------------
-- associativa ALIQUOTA_AD_VALOREM_PRODUTO
-------------------------------------------------------------------------

-- Trigger para verificar a vigência ao inserir em ALIQUOTA_AD_VALOREM_PRODUTO
CREATE TRIGGER IF NOT EXISTS TRG_BEFORE_INSERT_ALIQUOTA_AD_VALOREM_PRODUTO
BEFORE INSERT ON ALIQUOTA_AD_VALOREM_PRODUTO
FOR EACH ROW
BEGIN
    SELECT RAISE(ABORT, 'Vigência da alíquota ad valorem produto deve estar dentro da vigência da alíquota ad valorem e da vigência da ncm')
    WHERE NEW.AAVP_INICIO_VIGENCIA < (SELECT AADV_INICIO_VIGENCIA FROM ALIQUOTAS_AD_VALOREM WHERE AADV_ID = NEW.AAVP_AADV_ID)
    OR NEW.AAVP_INICIO_VIGENCIA < (SELECT NCM_INICIO_VIGENCIA FROM NCM WHERE NCM_CD = NEW.AAVP_NCM_CD)
    OR (NEW.AAVP_FIM_VIGENCIA IS NULL AND ((SELECT AADV_FIM_VIGENCIA FROM ALIQUOTAS_AD_VALOREM WHERE AADV_ID = NEW.AAVP_AADV_ID) IS NOT NULL OR (SELECT NCM_FIM_VIGENCIA FROM NCM WHERE NCM_CD = NEW.AAVP_NCM_CD) IS NOT NULL))
    OR (NEW.AAVP_FIM_VIGENCIA IS NOT NULL AND (NEW.AAVP_FIM_VIGENCIA > (SELECT AADV_FIM_VIGENCIA FROM ALIQUOTAS_AD_VALOREM WHERE AADV_ID = NEW.AAVP_AADV_ID) OR NEW.AAVP_FIM_VIGENCIA > (SELECT NCM_FIM_VIGENCIA FROM NCM WHERE NCM_CD = NEW.AAVP_NCM_CD)));
END;

-- Trigger para verificar a vigência ao atualizar em ALIQUOTA_AD_VALOREM_PRODUTO
CREATE TRIGGER IF NOT EXISTS TRG_BEFORE_UPDATE_ALIQUOTA_AD_VALOREM_PRODUTO
BEFORE UPDATE ON ALIQUOTA_AD_VALOREM_PRODUTO
FOR EACH ROW
BEGIN
    SELECT RAISE(ABORT, 'Vigência da alíquota ad valorem produto deve estar dentro da vigência da alíquota ad valorem e da vigência da ncm')
    WHERE NEW.AAVP_INICIO_VIGENCIA < (SELECT AADV_INICIO_VIGENCIA FROM ALIQUOTAS_AD_VALOREM WHERE AADV_ID = NEW.AAVP_AADV_ID)
    OR NEW.AAVP_INICIO_VIGENCIA < (SELECT NCM_INICIO_VIGENCIA FROM NCM WHERE NCM_CD = NEW.AAVP_NCM_CD)
    OR (NEW.AAVP_FIM_VIGENCIA IS NULL AND ((SELECT AADV_FIM_VIGENCIA FROM ALIQUOTAS_AD_VALOREM WHERE AADV_ID = NEW.AAVP_AADV_ID) IS NOT NULL OR (SELECT NCM_FIM_VIGENCIA FROM NCM WHERE NCM_CD = NEW.AAVP_NCM_CD) IS NOT NULL))
    OR (NEW.AAVP_FIM_VIGENCIA IS NOT NULL AND (NEW.AAVP_FIM_VIGENCIA > (SELECT AADV_FIM_VIGENCIA FROM ALIQUOTAS_AD_VALOREM WHERE AADV_ID = NEW.AAVP_AADV_ID) OR NEW.AAVP_FIM_VIGENCIA > (SELECT NCM_FIM_VIGENCIA FROM NCM WHERE NCM_CD = NEW.AAVP_NCM_CD)));
END;

-------------------------------------------------------------------------
-- associativa ALIQUOTA_AD_REM_PRODUTO
-------------------------------------------------------------------------

-- Trigger para verificar a vigência ao inserir em ALIQUOTA_AD_REM_PRODUTO
CREATE TRIGGER IF NOT EXISTS TRG_BEFORE_INSERT_ALIQUOTA_AD_REM_PRODUTO
BEFORE INSERT ON ALIQUOTA_AD_REM_PRODUTO
FOR EACH ROW
BEGIN
    SELECT RAISE(ABORT, 'Vigência da alíquota ad rem produto deve estar dentro da vigência da alíquota ad rem e da vigência da ncm')
    WHERE NEW.AARP_INICIO_VIGENCIA < (SELECT AARE_INICIO_VIGENCIA FROM ALIQUOTAS_AD_REM WHERE AARE_ID = NEW.AARP_AARE_ID)
    OR NEW.AARP_INICIO_VIGENCIA < (SELECT NCM_INICIO_VIGENCIA FROM NCM WHERE NCM_CD = NEW.AARP_NCM_CD)
    OR (NEW.AARP_FIM_VIGENCIA IS NULL AND ((SELECT AARE_FIM_VIGENCIA FROM ALIQUOTAS_AD_REM WHERE AARE_ID = NEW.AARP_AARE_ID) IS NOT NULL OR (SELECT NCM_FIM_VIGENCIA FROM NCM WHERE NCM_CD = NEW.AARP_NCM_CD) IS NOT NULL))
    OR (NEW.AARP_FIM_VIGENCIA IS NOT NULL AND (NEW.AARP_FIM_VIGENCIA > (SELECT AARE_FIM_VIGENCIA FROM ALIQUOTAS_AD_REM WHERE AARE_ID = NEW.AARP_AARE_ID) OR NEW.AARP_FIM_VIGENCIA > (SELECT NCM_FIM_VIGENCIA FROM NCM WHERE NCM_CD = NEW.AARP_NCM_CD)));
END;

-- Trigger para verificar a vigência ao atualizar em ALIQUOTA_AD_REM_PRODUTO
CREATE TRIGGER IF NOT EXISTS TRG_BEFORE_UPDATE_ALIQUOTA_AD_REM_PRODUTO
BEFORE UPDATE ON ALIQUOTA_AD_REM_PRODUTO
FOR EACH ROW
BEGIN
    SELECT RAISE(ABORT, 'Vigência da alíquota ad rem produto deve estar dentro da vigência da alíquota ad rem e da vigência da ncm')
    WHERE NEW.AARP_INICIO_VIGENCIA < (SELECT AARE_INICIO_VIGENCIA FROM ALIQUOTAS_AD_REM WHERE AARE_ID = NEW.AARP_AARE_ID)
    OR NEW.AARP_INICIO_VIGENCIA < (SELECT NCM_INICIO_VIGENCIA FROM NCM WHERE NCM_CD = NEW.AARP_NCM_CD)
    OR (NEW.AARP_FIM_VIGENCIA IS NULL AND ((SELECT AARE_FIM_VIGENCIA FROM ALIQUOTAS_AD_REM WHERE AARE_ID = NEW.AARP_AARE_ID) IS NOT NULL OR (SELECT NCM_FIM_VIGENCIA FROM NCM WHERE NCM_CD = NEW.AARP_NCM_CD) IS NOT NULL))
    OR (NEW.AARP_FIM_VIGENCIA IS NOT NULL AND (NEW.AARP_FIM_VIGENCIA > (SELECT AARE_FIM_VIGENCIA FROM ALIQUOTAS_AD_REM WHERE AARE_ID = NEW.AARP_AARE_ID) OR NEW.AARP_FIM_VIGENCIA > (SELECT NCM_FIM_VIGENCIA FROM NCM WHERE NCM_CD = NEW.AARP_NCM_CD)));
END;

-------------------------------------------------------------------------
-- associativa EXCECOES_AD_VALOREM_PRODUTO
-------------------------------------------------------------------------

-- Trigger para verificar a vigência ao inserir em EXCECOES_AD_VALOREM_PRODUTO
CREATE TRIGGER IF NOT EXISTS TRG_BEFORE_INSERT_EXCECOES_AD_VALOREM_PRODUTO
BEFORE INSERT ON EXCECOES_AD_VALOREM_PRODUTO
FOR EACH ROW
BEGIN
    SELECT RAISE(ABORT, 'Vigência da exceção ad valorem produto deve estar dentro da vigência da alíquota ad valorem produto e da vigência da ncm')
    WHERE NEW.EAVP_INICIO_VIGENCIA < (SELECT AAVP_INICIO_VIGENCIA FROM ALIQUOTA_AD_VALOREM_PRODUTO WHERE AAVP_ID = NEW.EAVP_AAVP_ID)
    OR NEW.EAVP_INICIO_VIGENCIA < (SELECT NCM_INICIO_VIGENCIA FROM NCM WHERE NCM_CD = NEW.EAVP_NCM_CD)
    OR (NEW.EAVP_FIM_VIGENCIA IS NULL AND ((SELECT AAVP_FIM_VIGENCIA FROM ALIQUOTA_AD_VALOREM_PRODUTO WHERE AAVP_ID = NEW.EAVP_AAVP_ID) IS NOT NULL OR (SELECT NCM_FIM_VIGENCIA FROM NCM WHERE NCM_CD = NEW.EAVP_NCM_CD) IS NOT NULL))
    OR (NEW.EAVP_FIM_VIGENCIA IS NOT NULL AND (NEW.EAVP_FIM_VIGENCIA > (SELECT AAVP_FIM_VIGENCIA FROM ALIQUOTA_AD_VALOREM_PRODUTO WHERE AAVP_ID = NEW.EAVP_AAVP_ID) OR NEW.EAVP_FIM_VIGENCIA > (SELECT NCM_FIM_VIGENCIA FROM NCM WHERE NCM_CD = NEW.EAVP_NCM_CD)));
END;

-- Trigger para verificar a vigência ao atualizar em EXCECOES_AD_VALOREM_PRODUTO
CREATE TRIGGER IF NOT EXISTS TRG_BEFORE_UPDATE_EXCECOES_AD_VALOREM_PRODUTO
BEFORE UPDATE ON EXCECOES_AD_VALOREM_PRODUTO
FOR EACH ROW
BEGIN
    SELECT RAISE(ABORT, 'Vigência da exceção ad valorem produto deve estar dentro da vigência da alíquota ad valorem produto e da vigência da ncm')
    WHERE NEW.EAVP_INICIO_VIGENCIA < (SELECT AAVP_INICIO_VIGENCIA FROM ALIQUOTA_AD_VALOREM_PRODUTO WHERE AAVP_ID = NEW.EAVP_AAVP_ID)
    OR NEW.EAVP_INICIO_VIGENCIA < (SELECT NCM_INICIO_VIGENCIA FROM NCM WHERE NCM_CD = NEW.EAVP_NCM_CD)
    OR (NEW.EAVP_FIM_VIGENCIA IS NULL AND ((SELECT AAVP_FIM_VIGENCIA FROM ALIQUOTA_AD_VALOREM_PRODUTO WHERE AAVP_ID = NEW.EAVP_AAVP_ID) IS NOT NULL OR (SELECT NCM_FIM_VIGENCIA FROM NCM WHERE NCM_CD = NEW.EAVP_NCM_CD) IS NOT NULL))
    OR (NEW.EAVP_FIM_VIGENCIA IS NOT NULL AND (NEW.EAVP_FIM_VIGENCIA > (SELECT AAVP_FIM_VIGENCIA FROM ALIQUOTA_AD_VALOREM_PRODUTO WHERE AAVP_ID = NEW.EAVP_AAVP_ID) OR NEW.EAVP_FIM_VIGENCIA > (SELECT NCM_FIM_VIGENCIA FROM NCM WHERE NCM_CD = NEW.EAVP_NCM_CD)));
END;

-------------------------------------------------------------------------
-- associativa EXCECOES_AD_REM_PRODUTO
-------------------------------------------------------------------------

-- Trigger para verificar a vigência ao inserir em EXCECOES_AD_REM_PRODUTO
CREATE TRIGGER IF NOT EXISTS TRG_BEFORE_INSERT_EXCECOES_AD_REM_PRODUTO
BEFORE INSERT ON EXCECOES_AD_REM_PRODUTO
FOR EACH ROW
BEGIN
    SELECT RAISE(ABORT, 'Vigência da exceção ad rem produto deve estar dentro da vigência da alíquota ad rem produto e da vigência da ncm')
    WHERE NEW.EARP_INICIO_VIGENCIA < (SELECT AARP_INICIO_VIGENCIA FROM ALIQUOTA_AD_REM_PRODUTO WHERE AARP_ID = NEW.EARP_AARP_ID)
    OR NEW.EARP_INICIO_VIGENCIA < (SELECT NCM_INICIO_VIGENCIA FROM NCM WHERE NCM_CD = NEW.EARP_NCM_CD)
    OR (NEW.EARP_FIM_VIGENCIA IS NULL AND ((SELECT AARP_FIM_VIGENCIA FROM ALIQUOTA_AD_REM_PRODUTO WHERE AARP_ID = NEW.EARP_AARP_ID) IS NOT NULL OR (SELECT NCM_FIM_VIGENCIA FROM NCM WHERE NCM_CD = NEW.EARP_NCM_CD) IS NOT NULL))
    OR (NEW.EARP_FIM_VIGENCIA IS NOT NULL AND (NEW.EARP_FIM_VIGENCIA > (SELECT AARP_FIM_VIGENCIA FROM ALIQUOTA_AD_REM_PRODUTO WHERE AARP_ID = NEW.EARP_AARP_ID) OR NEW.EARP_FIM_VIGENCIA > (SELECT NCM_FIM_VIGENCIA FROM NCM WHERE NCM_CD = NEW.EARP_NCM_CD)));
END;

-- Trigger para verificar a vigência ao atualizar em EXCECOES_AD_REM_PRODUTO
CREATE TRIGGER IF NOT EXISTS TRG_BEFORE_UPDATE_EXCECOES_AD_REM_PRODUTO
BEFORE UPDATE ON EXCECOES_AD_REM_PRODUTO
FOR EACH ROW
BEGIN
    SELECT RAISE(ABORT, 'Vigência da exceção ad rem produto deve estar dentro da vigência da alíquota ad rem produto e da vigência da ncm')
    WHERE NEW.EARP_INICIO_VIGENCIA < (SELECT AARP_INICIO_VIGENCIA FROM ALIQUOTA_AD_REM_PRODUTO WHERE AARP_ID = NEW.EARP_AARP_ID)
    OR NEW.EARP_INICIO_VIGENCIA < (SELECT NCM_INICIO_VIGENCIA FROM NCM WHERE NCM_CD = NEW.EARP_NCM_CD)
    OR (NEW.EARP_FIM_VIGENCIA IS NULL AND ((SELECT AARP_FIM_VIGENCIA FROM ALIQUOTA_AD_REM_PRODUTO WHERE AARP_ID = NEW.EARP_AARP_ID) IS NOT NULL OR (SELECT NCM_FIM_VIGENCIA FROM NCM WHERE NCM_CD = NEW.EARP_NCM_CD) IS NOT NULL))
    OR (NEW.EARP_FIM_VIGENCIA IS NOT NULL AND (NEW.EARP_FIM_VIGENCIA > (SELECT AARP_FIM_VIGENCIA FROM ALIQUOTA_AD_REM_PRODUTO WHERE AARP_ID = NEW.EARP_AARP_ID) OR NEW.EARP_FIM_VIGENCIA > (SELECT NCM_FIM_VIGENCIA FROM NCM WHERE NCM_CD = NEW.EARP_NCM_CD)));
END;

-------------------------------------------------------------------------
-- associativa ALIQUOTA_AD_VALOREM_SERVICO
-------------------------------------------------------------------------

-- Trigger para verificar a vigência ao inserir em ALIQUOTA_AD_VALOREM_SERVICO
CREATE TRIGGER IF NOT EXISTS TRG_BEFORE_INSERT_ALIQUOTA_AD_VALOREM_SERVICO
BEFORE INSERT ON ALIQUOTA_AD_VALOREM_SERVICO
FOR EACH ROW
BEGIN
    SELECT RAISE(ABORT, 'Vigência da alíquota ad valorem serviço deve estar dentro da vigência da alíquota ad valorem e da vigência do NBS')
    WHERE NEW.AAVS_INICIO_VIGENCIA < (SELECT AADV_INICIO_VIGENCIA FROM ALIQUOTAS_AD_VALOREM WHERE AADV_ID = NEW.AAVS_AADV_ID)
    OR NEW.AAVS_INICIO_VIGENCIA < (SELECT NBS_INICIO_VIGENCIA FROM NBS WHERE NBS_CD = NEW.AAVS_NBS_CD)
    OR (NEW.AAVS_FIM_VIGENCIA IS NULL AND ((SELECT AADV_FIM_VIGENCIA FROM ALIQUOTAS_AD_VALOREM WHERE AADV_ID = NEW.AAVS_AADV_ID) IS NOT NULL OR (SELECT NBS_FIM_VIGENCIA FROM NBS WHERE NBS_CD = NEW.AAVS_NBS_CD) IS NOT NULL))
    OR (NEW.AAVS_FIM_VIGENCIA IS NOT NULL AND (NEW.AAVS_FIM_VIGENCIA > (SELECT AADV_FIM_VIGENCIA FROM ALIQUOTAS_AD_VALOREM WHERE AADV_ID = NEW.AAVS_AADV_ID) OR NEW.AAVS_FIM_VIGENCIA > (SELECT NBS_FIM_VIGENCIA FROM NBS WHERE NBS_CD = NEW.AAVS_NBS_CD)));
END;

-- Trigger para verificar a vigência ao atualizar em ALIQUOTA_AD_VALOREM_SERVICO
CREATE TRIGGER IF NOT EXISTS TRG_BEFORE_UPDATE_ALIQUOTA_AD_VALOREM_SERVICO
BEFORE UPDATE ON ALIQUOTA_AD_VALOREM_SERVICO
FOR EACH ROW
BEGIN
    SELECT RAISE(ABORT, 'Vigência da alíquota ad valorem serviço deve estar dentro da vigência da alíquota ad valorem e da vigência do NBS')
    WHERE NEW.AAVS_INICIO_VIGENCIA < (SELECT AADV_INICIO_VIGENCIA FROM ALIQUOTAS_AD_VALOREM WHERE AADV_ID = NEW.AAVS_AADV_ID)
    OR NEW.AAVS_INICIO_VIGENCIA < (SELECT NBS_INICIO_VIGENCIA FROM NBS WHERE NBS_CD = NEW.AAVS_NBS_CD)
    OR (NEW.AAVS_FIM_VIGENCIA IS NULL AND ((SELECT AADV_FIM_VIGENCIA FROM ALIQUOTAS_AD_VALOREM WHERE AADV_ID = NEW.AAVS_AADV_ID) IS NOT NULL OR (SELECT NBS_FIM_VIGENCIA FROM NBS WHERE NBS_CD = NEW.AAVS_NBS_CD) IS NOT NULL))
    OR (NEW.AAVS_FIM_VIGENCIA IS NOT NULL AND (NEW.AAVS_FIM_VIGENCIA > (SELECT AADV_FIM_VIGENCIA FROM ALIQUOTAS_AD_VALOREM WHERE AADV_ID = NEW.AAVS_AADV_ID) OR NEW.AAVS_FIM_VIGENCIA > (SELECT NBS_FIM_VIGENCIA FROM NBS WHERE NBS_CD = NEW.AAVS_NBS_CD)));
END;

-------------------------------------------------------------------------
-- associativa ALIQUOTA_AD_REM_SERVICO
-------------------------------------------------------------------------

-- Trigger para verificar a vigência ao inserir em ALIQUOTA_AD_REM_SERVICO
CREATE TRIGGER IF NOT EXISTS TRG_BEFORE_INSERT_ALIQUOTA_AD_REM_SERVICO
BEFORE INSERT ON ALIQUOTA_AD_REM_SERVICO
FOR EACH ROW
BEGIN
    SELECT RAISE(ABORT, 'Vigência da alíquota ad rem serviço deve estar dentro da vigência da alíquota ad rem e da vigência do NBS')
    WHERE NEW.AARS_INICIO_VIGENCIA < (SELECT AARE_INICIO_VIGENCIA FROM ALIQUOTAS_AD_REM WHERE AARE_ID = NEW.AARS_AARE_ID)
    OR NEW.AARS_INICIO_VIGENCIA < (SELECT NBS_INICIO_VIGENCIA FROM NBS WHERE NBS_CD = NEW.AARS_NBS_CD)
    OR (NEW.AARS_FIM_VIGENCIA IS NULL AND ((SELECT AARE_FIM_VIGENCIA FROM ALIQUOTAS_AD_REM WHERE AARE_ID = NEW.AARS_AARE_ID) IS NOT NULL OR (SELECT NBS_FIM_VIGENCIA FROM NBS WHERE NBS_CD = NEW.AARS_NBS_CD) IS NOT NULL))
    OR (NEW.AARS_FIM_VIGENCIA IS NOT NULL AND (NEW.AARS_FIM_VIGENCIA > (SELECT AARE_FIM_VIGENCIA FROM ALIQUOTAS_AD_REM WHERE AARE_ID = NEW.AARS_AARE_ID) OR NEW.AARS_FIM_VIGENCIA > (SELECT NBS_FIM_VIGENCIA FROM NBS WHERE NBS_CD = NEW.AARS_NBS_CD)));
END;

-- Trigger para verificar a vigência ao atualizar em ALIQUOTA_AD_REM_SERVICO
CREATE TRIGGER IF NOT EXISTS TRG_BEFORE_UPDATE_ALIQUOTA_AD_REM_SERVICO
BEFORE UPDATE ON ALIQUOTA_AD_REM_SERVICO
FOR EACH ROW
BEGIN
    SELECT RAISE(ABORT, 'Vigência da alíquota ad rem serviço deve estar dentro da vigência da alíquota ad rem e da vigência do NBS')
    WHERE NEW.AARS_INICIO_VIGENCIA < (SELECT AARE_INICIO_VIGENCIA FROM ALIQUOTAS_AD_REM WHERE AARE_ID = NEW.AARS_AARE_ID)
    OR NEW.AARS_INICIO_VIGENCIA < (SELECT NBS_INICIO_VIGENCIA FROM NBS WHERE NBS_CD = NEW.AARS_NBS_CD)
    OR (NEW.AARS_FIM_VIGENCIA IS NULL AND ((SELECT AARE_FIM_VIGENCIA FROM ALIQUOTAS_AD_REM WHERE AARE_ID = NEW.AARS_AARE_ID) IS NOT NULL OR (SELECT NBS_FIM_VIGENCIA FROM NBS WHERE NBS_CD = NEW.AARS_NBS_CD) IS NOT NULL))
    OR (NEW.AARS_FIM_VIGENCIA IS NOT NULL AND (NEW.AARS_FIM_VIGENCIA > (SELECT AARE_FIM_VIGENCIA FROM ALIQUOTAS_AD_REM WHERE AARE_ID = NEW.AARS_AARE_ID) OR NEW.AARS_FIM_VIGENCIA > (SELECT NBS_FIM_VIGENCIA FROM NBS WHERE NBS_CD = NEW.AARS_NBS_CD)));
END;

-------------------------------------------------------------------------
-- associativa EXCECOES_AD_VALOREM_SERVICO
-------------------------------------------------------------------------

-- Trigger para verificar a vigência ao inserir em EXCECOES_AD_VALOREM_SERVICO
CREATE TRIGGER IF NOT EXISTS TRG_BEFORE_INSERT_EXCECOES_AD_VALOREM_SERVICO
BEFORE INSERT ON EXCECOES_AD_VALOREM_SERVICO
FOR EACH ROW
BEGIN
    SELECT RAISE(ABORT, 'Vigência da exceção ad valorem serviço deve estar dentro da vigência da alíquota ad valorem serviço e da vigência do NBS')
    WHERE NEW.EAVS_INICIO_VIGENCIA < (SELECT AAVS_INICIO_VIGENCIA FROM ALIQUOTA_AD_VALOREM_SERVICO WHERE AAVS_ID = NEW.EAVS_AAVS_ID)
    OR NEW.EAVS_INICIO_VIGENCIA < (SELECT NBS_INICIO_VIGENCIA FROM NBS WHERE NBS_CD = NEW.EAVS_NBS_CD)
    OR (NEW.EAVS_FIM_VIGENCIA IS NULL AND ((SELECT AAVS_FIM_VIGENCIA FROM ALIQUOTA_AD_VALOREM_SERVICO WHERE AAVS_ID = NEW.EAVS_AAVS_ID) IS NOT NULL OR (SELECT NBS_FIM_VIGENCIA FROM NBS WHERE NBS_CD = NEW.EAVS_NBS_CD) IS NOT NULL))
    OR (NEW.EAVS_FIM_VIGENCIA IS NOT NULL AND (NEW.EAVS_FIM_VIGENCIA > (SELECT AAVS_FIM_VIGENCIA FROM ALIQUOTA_AD_VALOREM_SERVICO WHERE AAVS_ID = NEW.EAVS_AAVS_ID) OR NEW.EAVS_FIM_VIGENCIA > (SELECT NBS_FIM_VIGENCIA FROM NBS WHERE NBS_CD = NEW.EAVS_NBS_CD)));
END;

-- Trigger para verificar a vigência ao atualizar em EXCECOES_AD_VALOREM_SERVICO
CREATE TRIGGER IF NOT EXISTS TRG_BEFORE_UPDATE_EXCECOES_AD_VALOREM_SERVICO
BEFORE UPDATE ON EXCECOES_AD_VALOREM_SERVICO
FOR EACH ROW
BEGIN
    SELECT RAISE(ABORT, 'Vigência da exceção ad valorem serviço deve estar dentro da vigência da alíquota ad valorem serviço e da vigência do NBS')
    WHERE NEW.EAVS_INICIO_VIGENCIA < (SELECT AAVS_INICIO_VIGENCIA FROM ALIQUOTA_AD_VALOREM_SERVICO WHERE AAVS_ID = NEW.EAVS_AAVS_ID)
    OR NEW.EAVS_INICIO_VIGENCIA < (SELECT NBS_INICIO_VIGENCIA FROM NBS WHERE NBS_CD = NEW.EAVS_NBS_CD)
    OR (NEW.EAVS_FIM_VIGENCIA IS NULL AND ((SELECT AAVS_FIM_VIGENCIA FROM ALIQUOTA_AD_VALOREM_SERVICO WHERE AAVS_ID = NEW.EAVS_AAVS_ID) IS NOT NULL OR (SELECT NBS_FIM_VIGENCIA FROM NBS WHERE NBS_CD = NEW.EAVS_NBS_CD) IS NOT NULL))
    OR (NEW.EAVS_FIM_VIGENCIA IS NOT NULL AND (NEW.EAVS_FIM_VIGENCIA > (SELECT AAVS_FIM_VIGENCIA FROM ALIQUOTA_AD_VALOREM_SERVICO WHERE AAVS_ID = NEW.EAVS_AAVS_ID) OR NEW.EAVS_FIM_VIGENCIA > (SELECT NBS_FIM_VIGENCIA FROM NBS WHERE NBS_CD = NEW.EAVS_NBS_CD)));
END;

-------------------------------------------------------------------------
-- associativa EXCECOES_AD_REM_SERVICO
-------------------------------------------------------------------------

-- Trigger para verificar a vigência ao inserir em EXCECOES_AD_REM_SERVICO
CREATE TRIGGER IF NOT EXISTS TRG_BEFORE_INSERT_EXCECOES_AD_REM_SERVICO
BEFORE INSERT ON EXCECOES_AD_REM_SERVICO
FOR EACH ROW
BEGIN
    SELECT RAISE(ABORT, 'Vigência da exceção ad rem serviço deve estar dentro da vigência da alíquota ad rem serviço e da vigência do NBS')
    WHERE NEW.EARS_INICIO_VIGENCIA < (SELECT AARS_INICIO_VIGENCIA FROM ALIQUOTA_AD_REM_SERVICO WHERE AARS_ID = NEW.EARS_AARS_ID)
    OR NEW.EARS_INICIO_VIGENCIA < (SELECT NBS_INICIO_VIGENCIA FROM NBS WHERE NBS_CD = NEW.EARS_NBS_CD)
    OR (NEW.EARS_FIM_VIGENCIA IS NULL AND ((SELECT AARS_FIM_VIGENCIA FROM ALIQUOTA_AD_REM_SERVICO WHERE AARS_ID = NEW.EARS_AARS_ID) IS NOT NULL OR (SELECT NBS_FIM_VIGENCIA FROM NBS WHERE NBS_CD = NEW.EARS_NBS_CD) IS NOT NULL))
    OR (NEW.EARS_FIM_VIGENCIA IS NOT NULL AND (NEW.EARS_FIM_VIGENCIA > (SELECT AARS_FIM_VIGENCIA FROM ALIQUOTA_AD_REM_SERVICO WHERE AARS_ID = NEW.EARS_AARS_ID) OR NEW.EARS_FIM_VIGENCIA > (SELECT NBS_FIM_VIGENCIA FROM NBS WHERE NBS_CD = NEW.EARS_NBS_CD)));
END;

-- Trigger para verificar a vigência ao atualizar em EXCECOES_AD_REM_SERVICO
CREATE TRIGGER IF NOT EXISTS TRG_BEFORE_UPDATE_EXCECOES_AD_REM_SERVICO
BEFORE UPDATE ON EXCECOES_AD_REM_SERVICO
FOR EACH ROW
BEGIN
    SELECT RAISE(ABORT, 'Vigência da exceção ad rem serviço deve estar dentro da vigência da alíquota ad rem serviço e da vigência do NBS')
    WHERE NEW.EARS_INICIO_VIGENCIA < (SELECT AARS_INICIO_VIGENCIA FROM ALIQUOTA_AD_REM_SERVICO WHERE AARS_ID = NEW.EARS_AARS_ID)
    OR NEW.EARS_INICIO_VIGENCIA < (SELECT NBS_INICIO_VIGENCIA FROM NBS WHERE NBS_CD = NEW.EARS_NBS_CD)
    OR (NEW.EARS_FIM_VIGENCIA IS NULL AND ((SELECT AARS_FIM_VIGENCIA FROM ALIQUOTA_AD_REM_SERVICO WHERE AARS_ID = NEW.EARS_AARS_ID) IS NOT NULL OR (SELECT NBS_FIM_VIGENCIA FROM NBS WHERE NBS_CD = NEW.EARS_NBS_CD) IS NOT NULL))
    OR (NEW.EARS_FIM_VIGENCIA IS NOT NULL AND (NEW.EARS_FIM_VIGENCIA > (SELECT AARS_FIM_VIGENCIA FROM ALIQUOTA_AD_REM_SERVICO WHERE AARS_ID = NEW.EARS_AARS_ID) OR NEW.EARS_FIM_VIGENCIA > (SELECT NBS_FIM_VIGENCIA FROM NBS WHERE NBS_CD = NEW.EARS_NBS_CD)));
END;

-------------------------------------------------------------------------
-- associativa FUNDAMENTACAO_LEGAL
-------------------------------------------------------------------------

-- Trigger para verificar a vigência ao inserir em FUNDAMENTACAO_LEGAL
CREATE TRIGGER IF NOT EXISTS TRG_BEFORE_INSERT_FUNDAMENTACAO_LEGAL
BEFORE INSERT ON FUNDAMENTACAO_LEGAL
FOR EACH ROW
BEGIN
    SELECT RAISE(ABORT, 'Vigência da fundamentação legal deve estar dentro da vigência da classificação tributária e da vigência do regime tributário')
    WHERE NEW.FDLG_INICIO_VIGENCIA < (SELECT CLTR_INICIO_VIGENCIA FROM CLASSIFICACOES_TRIBUTARIAS WHERE CLTR_ID = NEW.FDLG_CLTR_ID)
    OR NEW.FDLG_INICIO_VIGENCIA < (SELECT RGTR_INICIO_VIGENCIA FROM REGIMES_TRIBUTARIOS WHERE RGTR_ID = NEW.FDLG_RGTR_ID)
    OR (NEW.FDLG_FIM_VIGENCIA IS NULL AND ((SELECT CLTR_FIM_VIGENCIA FROM CLASSIFICACOES_TRIBUTARIAS WHERE CLTR_ID = NEW.FDLG_CLTR_ID) IS NOT NULL OR (SELECT RGTR_FIM_VIGENCIA FROM REGIMES_TRIBUTARIOS WHERE RGTR_ID = NEW.FDLG_RGTR_ID) IS NOT NULL))
    OR (NEW.FDLG_FIM_VIGENCIA IS NOT NULL AND (NEW.FDLG_FIM_VIGENCIA > (SELECT CLTR_FIM_VIGENCIA FROM CLASSIFICACOES_TRIBUTARIAS WHERE CLTR_ID = NEW.FDLG_CLTR_ID) OR NEW.FDLG_FIM_VIGENCIA > (SELECT RGTR_FIM_VIGENCIA FROM REGIMES_TRIBUTARIOS WHERE RGTR_ID = NEW.FDLG_RGTR_ID)));
END;

-- Trigger para verificar a vigência ao atualizar em FUNDAMENTACAO_LEGAL
CREATE TRIGGER IF NOT EXISTS TRG_BEFORE_UPDATE_FUNDAMENTACAO_LEGAL
BEFORE UPDATE ON FUNDAMENTACAO_LEGAL
FOR EACH ROW
BEGIN
    SELECT RAISE(ABORT, 'Vigência da fundamentação legal deve estar dentro da vigência da classificação tributária e da vigência do regime tributário')
    WHERE NEW.FDLG_INICIO_VIGENCIA < (SELECT CLTR_INICIO_VIGENCIA FROM CLASSIFICACOES_TRIBUTARIAS WHERE CLTR_ID = NEW.FDLG_CLTR_ID)
    OR NEW.FDLG_INICIO_VIGENCIA < (SELECT RGTR_INICIO_VIGENCIA FROM REGIMES_TRIBUTARIOS WHERE RGTR_ID = NEW.FDLG_RGTR_ID)
    OR (NEW.FDLG_FIM_VIGENCIA IS NULL AND ((SELECT CLTR_FIM_VIGENCIA FROM CLASSIFICACOES_TRIBUTARIAS WHERE CLTR_ID = NEW.FDLG_CLTR_ID) IS NOT NULL OR (SELECT RGTR_FIM_VIGENCIA FROM REGIMES_TRIBUTARIOS WHERE RGTR_ID = NEW.FDLG_RGTR_ID) IS NOT NULL))
    OR (NEW.FDLG_FIM_VIGENCIA IS NOT NULL AND (NEW.FDLG_FIM_VIGENCIA > (SELECT CLTR_FIM_VIGENCIA FROM CLASSIFICACOES_TRIBUTARIAS WHERE CLTR_ID = NEW.FDLG_CLTR_ID) OR NEW.FDLG_FIM_VIGENCIA > (SELECT RGTR_FIM_VIGENCIA FROM REGIMES_TRIBUTARIOS WHERE RGTR_ID = NEW.FDLG_RGTR_ID)));
END;

-------------------------------------------------------------------------
-- associativa PERCENTUAL_REDUCAO
-------------------------------------------------------------------------

-- Trigger para verificar a vigência ao inserir em PERCENTUAL_REDUCAO
CREATE TRIGGER IF NOT EXISTS TRG_BEFORE_INSERT_PERCENTUAL_REDUCAO
BEFORE INSERT ON PERCENTUAL_REDUCAO
FOR EACH ROW
BEGIN
    SELECT RAISE(ABORT, 'Vigência do percentual de redução deve estar dentro da vigência da classificação tributária e da vigência do tributo')
    WHERE NEW.PERE_INICIO_VIGENCIA < (SELECT CLTR_INICIO_VIGENCIA FROM CLASSIFICACOES_TRIBUTARIAS WHERE CLTR_ID = NEW.PERE_CLTR_ID)
    OR NEW.PERE_INICIO_VIGENCIA < (SELECT TBTO_INICIO_VIGENCIA FROM TRIBUTOS WHERE TBTO_ID = NEW.PERE_TBTO_ID)
    OR (NEW.PERE_FIM_VIGENCIA IS NULL AND ((SELECT CLTR_FIM_VIGENCIA FROM CLASSIFICACOES_TRIBUTARIAS WHERE CLTR_ID = NEW.PERE_CLTR_ID) IS NOT NULL OR (SELECT TBTO_FIM_VIGENCIA FROM TRIBUTOS WHERE TBTO_ID = NEW.PERE_TBTO_ID) IS NOT NULL))
    OR (NEW.PERE_FIM_VIGENCIA IS NOT NULL AND (NEW.PERE_FIM_VIGENCIA > (SELECT CLTR_FIM_VIGENCIA FROM CLASSIFICACOES_TRIBUTARIAS WHERE CLTR_ID = NEW.PERE_CLTR_ID) OR NEW.PERE_FIM_VIGENCIA > (SELECT TBTO_FIM_VIGENCIA FROM TRIBUTOS WHERE TBTO_ID = NEW.PERE_TBTO_ID)));
END;

-- Trigger para verificar a vigência ao atualizar em PERCENTUAL_REDUCAO
CREATE TRIGGER IF NOT EXISTS TRG_BEFORE_UPDATE_PERCENTUAL_REDUCAO
BEFORE UPDATE ON PERCENTUAL_REDUCAO
FOR EACH ROW
BEGIN
    SELECT RAISE(ABORT, 'Vigência do percentual de redução deve estar dentro da vigência da classificação tributária e da vigência do tributo')
    WHERE NEW.PERE_INICIO_VIGENCIA < (SELECT CLTR_INICIO_VIGENCIA FROM CLASSIFICACOES_TRIBUTARIAS WHERE CLTR_ID = NEW.PERE_CLTR_ID)
    OR NEW.PERE_INICIO_VIGENCIA < (SELECT TBTO_INICIO_VIGENCIA FROM TRIBUTOS WHERE TBTO_ID = NEW.PERE_TBTO_ID)
    OR (NEW.PERE_FIM_VIGENCIA IS NULL AND ((SELECT CLTR_FIM_VIGENCIA FROM CLASSIFICACOES_TRIBUTARIAS WHERE CLTR_ID = NEW.PERE_CLTR_ID) IS NOT NULL OR (SELECT TBTO_FIM_VIGENCIA FROM TRIBUTOS WHERE TBTO_ID = NEW.PERE_TBTO_ID) IS NOT NULL))
    OR (NEW.PERE_FIM_VIGENCIA IS NOT NULL AND (NEW.PERE_FIM_VIGENCIA > (SELECT CLTR_FIM_VIGENCIA FROM CLASSIFICACOES_TRIBUTARIAS WHERE CLTR_ID = NEW.PERE_CLTR_ID) OR NEW.PERE_FIM_VIGENCIA > (SELECT TBTO_FIM_VIGENCIA FROM TRIBUTOS WHERE TBTO_ID = NEW.PERE_TBTO_ID)));
END;

-------------------------------------------------------------------------
-- associativa TRIBUTOS_CONJUNTO
-------------------------------------------------------------------------

-- Trigger para verificar a vigência ao inserir em TRIBUTOS_CONJUNTO
CREATE TRIGGER IF NOT EXISTS TRG_BEFORE_INSERT_TRIBUTOS_CONJUNTO
BEFORE INSERT ON TRIBUTOS_CONJUNTO
FOR EACH ROW
BEGIN
    SELECT RAISE(ABORT, 'Vigência do tributo conjunto deve estar dentro da vigência do tributo e da vigência do conjunto de tributos')
    WHERE NEW.TBCJ_INICIO_VIGENCIA < (SELECT TBTO_INICIO_VIGENCIA FROM TRIBUTOS WHERE TBTO_ID = NEW.TBCJ_TBTO_ID)
    OR NEW.TBCJ_INICIO_VIGENCIA < (SELECT CJTB_INICIO_VIGENCIA FROM CONJUNTO_TRIBUTOS WHERE CJTB_ID = NEW.TBCJ_CJTB_ID)
    OR (NEW.TBCJ_FIM_VIGENCIA IS NULL AND ((SELECT TBTO_FIM_VIGENCIA FROM TRIBUTOS WHERE TBTO_ID = NEW.TBCJ_TBTO_ID) IS NOT NULL OR (SELECT CJTB_FIM_VIGENCIA FROM CONJUNTO_TRIBUTOS WHERE CJTB_ID = NEW.TBCJ_CJTB_ID) IS NOT NULL))
    OR (NEW.TBCJ_FIM_VIGENCIA IS NOT NULL AND (NEW.TBCJ_FIM_VIGENCIA > (SELECT TBTO_FIM_VIGENCIA FROM TRIBUTOS WHERE TBTO_ID = NEW.TBCJ_TBTO_ID) OR NEW.TBCJ_FIM_VIGENCIA > (SELECT CJTB_FIM_VIGENCIA FROM CONJUNTO_TRIBUTOS WHERE CJTB_ID = NEW.TBCJ_CJTB_ID)));
END;

-- Trigger para verificar a vigência ao atualizar em TRIBUTOS_CONJUNTO
CREATE TRIGGER IF NOT EXISTS TRG_BEFORE_UPDATE_TRIBUTOS_CONJUNTO
BEFORE UPDATE ON TRIBUTOS_CONJUNTO
FOR EACH ROW
BEGIN
    SELECT RAISE(ABORT, 'Vigência do tributo conjunto deve estar dentro da vigência do tributo e da vigência do conjunto de tributos')
    WHERE NEW.TBCJ_INICIO_VIGENCIA < (SELECT TBTO_INICIO_VIGENCIA FROM TRIBUTOS WHERE TBTO_ID = NEW.TBCJ_TBTO_ID)
    OR NEW.TBCJ_INICIO_VIGENCIA < (SELECT CJTB_INICIO_VIGENCIA FROM CONJUNTO_TRIBUTOS WHERE CJTB_ID = NEW.TBCJ_CJTB_ID)
    OR (NEW.TBCJ_FIM_VIGENCIA IS NULL AND ((SELECT TBTO_FIM_VIGENCIA FROM TRIBUTOS WHERE TBTO_ID = NEW.TBCJ_TBTO_ID) IS NOT NULL OR (SELECT CJTB_FIM_VIGENCIA FROM CONJUNTO_TRIBUTOS WHERE CJTB_ID = NEW.TBCJ_CJTB_ID) IS NOT NULL))
    OR (NEW.TBCJ_FIM_VIGENCIA IS NOT NULL AND (NEW.TBCJ_FIM_VIGENCIA > (SELECT TBTO_FIM_VIGENCIA FROM TRIBUTOS WHERE TBTO_ID = NEW.TBCJ_TBTO_ID) OR NEW.TBCJ_FIM_VIGENCIA > (SELECT CJTB_FIM_VIGENCIA FROM CONJUNTO_TRIBUTOS WHERE CJTB_ID = NEW.TBCJ_CJTB_ID)));
END;

